name: Test Helm Upgrade

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  integration-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      - name: Install k3d
        run: curl -s https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | bash

      - name: Create k3d Cluster
        run: k3d cluster create helm-test-cluster --wait

      - name: Create Dummy Helm Chart
        run: |
          mkdir -p charts
          helm create charts/dummy

      - name: Set Inputs as Env Vars
        run: |
          echo "INPUT_RELEASE=dummy-release" >> $GITHUB_ENV
          echo "INPUT_CHART=charts/dummy" >> $GITHUB_ENV
          echo "INPUT_NAMESPACE=default" >> $GITHUB_ENV
          echo "INPUT_ATOMIC=true" >> $GITHUB_ENV
          echo "INPUT_WAIT=true" >> $GITHUB_ENV
          echo "INPUT_INSTALL=true" >> $GITHUB_ENV
          echo "INPUT_DEPENDENCY_UPDATE=true" >> $GITHUB_ENV
          echo "INPUT_TIMEOUT=5m0s" >> $GITHUB_ENV

      - name: Install Python & Dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run main.py directly (same as inside Docker)
        run: python3 main.py

      - name: Check for deployment from Helm
        run: |
          DEPLOY=$(kubectl get deploy -n default -o name | grep dummy || true)
          if [ -z "$DEPLOY" ]; then
            echo "❌ Deployment not found!"
            exit 1
          fi
          echo "✅ Found deployment: $DEPLOY"
          kubectl get $DEPLOY -n default

      - name: Cleanup
        run: |
          k3d cluster delete helm-test-cluster
          rm -rf charts/dummy